library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity numarator is
    port (
        CLK        : in  std_logic;           -- Semnal de ceas
        RESET      : in  std_logic;           -- Semnal de reset sincron
        LOAD       : in  std_logic;           -- Semnal pentru încărcare paralelă
        D          : in  std_logic_vector(3 downto 0);  -- Intrare paralelă pentru încărcare
        Q          : out std_logic_vector(3 downto 0)  -- Ieșire
    );
end numarator;

architecture Behavioral of numarator is
    signal counter : std_logic_vector(3 downto 0) := "0011"; -- începe de la 3
begin
    process(CLK, RESET)
    begin
        if RESET = '1' then
            counter <= "0011";  -- Resetare sincronă la 3
        elsif falling_edge(CLK) then
            if LOAD = '1' then
                counter <= D;  -- încărcare paralelă
            else
                if counter = "1100" then  -- Dacă ajungem la 12
                    counter <= "0011";  -- Resetează la 3
                else
                    counter <= counter + 1;  -- Incrementează numărătorul
                end if;
            end if;
        end if;
    end process;

    Q <= counter;  -- Ieșirea numărătorului
end Behavioral;
